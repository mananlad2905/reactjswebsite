{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlFor","style","height","width","cursor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","color","heading","onChange","event","console","log","target","value","background","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","slice","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","defaultProps","Alert","alert","word","lower","charAt","capitalize","message","About","data-bs-parent","App","setMode","_useState3","_useState4","setAlert","setTimeout","Router","cls","body","classList","remove","add","setInterval","Switch","Route","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.973daa3f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n           <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                             <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li> \r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={() => props.toggleMode(null)}  role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckDefault\"></label>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"bg-primary rounded mx-2\" onClick={() => props.toggleMode('primary')} style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n                        <div className=\"bg-success rounded mx-2\" onClick={() => props.toggleMode('success')} style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n                        <div className=\"bg-danger rounded mx-2\" onClick={() => props.toggleMode('danger')} style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n                        <div className=\"bg-warning rounded mx-2\" onClick={() => props.toggleMode('warning')} style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n                    </div>\r\n                    {/* <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-light\" type=\"submit\">Search</button>\r\n                    </form> \r\n                    \r\n                    <div className=\"dropdown mx-4\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        Colored Background\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\">\r\n                        <li><a className=\"dropdown-item\" onClick={props.changegreen} href=\"#\">Green</a></li>\r\n                        <li><a className=\"dropdown-item\" onClick={props.changered} href=\"#\">Red</a></li>\r\n                        <li><a className=\"dropdown-item\" onClick={props.changeyellow} href=\"#\">Yellow</a></li>\r\n                    </ul>\r\n                    </div> */}\r\n\r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n           </nav>\r\n    \r\n        </>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n                    title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired\r\n                }\r\nNavbar.defaultProps = {\r\n    title: 'New Website',\r\n    aboutText: 'About us'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    // const [mytextStyle,setMyStyle] = useState({\r\n    //     width: '230px',\r\n    //     height: '70px'\r\n    // })\r\n    \r\n    const handleupClick = () =>{\r\n        console.log(\"Uppercase is Clicked\"  + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted into Uppercase\", \"warning\" );\r\n    }\r\n    const handleloClick = () =>{\r\n        console.log(\"Lowercase is Clicked\"  + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted into Lowercase\", \"warning\" );\r\n    }\r\n    const handlecapClick = () =>{\r\n        console.log(\"Captization is Clicked\"  + text);\r\n        let newText = text[0].toUpperCase() + text.slice(1).toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted into First letter Captial\", \"warning\" );\r\n    }\r\n    const handleclearClick = () =>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Clear Text\", \"danger\" );\r\n    }\r\n    const handleonchange = (event) =>{\r\n        console.log(\"on changed\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () => {\r\n        // console.log(\"I am copy\");\r\n        var text = document.getElementById(\"mybox2\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy Text\", \"primary\" );\r\n    }\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra space remove From sentance\", \"primary\" );\r\n    }\r\n\r\n    const [text, setText] = useState('Enter text here');\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h3 className='text-center text-uppercase' style={{color: props.mode==='light'?'black':'white' }}>{props.heading}</h3>\r\n               <div className=\"mb-3\">\r\n                  <textarea className=\"form-control\" onChange={handleonchange} style={{background: props.mode==='light'?'white':'#13466e', color: props.mode==='light'?'black':'white' }} value={text} id=\"mybox2\" rows=\"8\"></textarea>\r\n               </div>\r\n            <button disabled={text.length===0} className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}  onClick={handleupClick}>Convert into Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}   onClick={handleloClick}>Convert into Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}   onClick={handlecapClick}>Convert into Capitalization</button>\r\n            <button disabled={text.length===0} className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}   onClick={handleCopy}>Copy text</button>\r\n            <button disabled={text.length===0} className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}   onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n            <button disabled={text.length===0} className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}   onClick={handleclearClick}>Clear Text</button>\r\n\r\n            {/* <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Convert text in Bold</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Convert text in underline</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Convert text in Italic</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Change Alternating Case</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Enable Light Mode</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Change the First letter to Uppercase of word</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Reverse the text</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Change Font size in Increment </button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Change Font size in Decrement </button> */}\r\n\r\n        </div>\r\n        <div className=\"container my-5\">\r\n            <h4 style={{color: props.mode==='light'?'black':'white' }}>Your text Summary</h4>\r\n            <p style={{color: props.mode==='light'?'black':'white' }}>{text.split(\" \").filter((element)=>{return element.length!==0}).length} Words and {text.length} Characters</p>\r\n            <p style={{color: props.mode==='light'?'black':'white' }}>{0.008 * text.split(\" \").length} Minutes</p>\r\n            <h4 style={{color: props.mode==='light'?'black':'white' }}>Preview</h4>\r\n            <p style={{color: props.mode==='light'?'black':'white' }}>{text.length>0?text:\"Nothing to preview\"}</p>\r\n            {/* <p>{text.trim() === '' ? 0 : text.match(/\\S+/g).length} words and {text.replace(/\\s+/g, '').length} characters</p> */}\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\n// style={{color: props.mode==='light'?'black':'white' }}","import React from 'react';\r\n\r\nfunction Alert(props){\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return(\r\n        <div style={{height:'50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>}\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React,{useState} from 'react';\r\n\r\nexport default function About (props) {\r\n    \r\n  return(\r\n     <>\r\n    <div className=\"container\" style={{color: props.mode==='light'?'black':'white' }}> \r\n    <h1 className=\"my-1\" style={{color: props.mode==='light'?'black':'white' }}>About us</h1>\r\n    \r\n    <div className=\"accordion my-4\" id=\"accordionExample\" >\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" >\r\n            <button className=\"accordion-button\" type=\"button\"  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\" style={{background: props.mode==='light'?'white':'#437197', color: props.mode==='light'?'black':'white' }}>\r\n                Tab 1\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\"  data-bs-parent=\"#accordionExample\" style={{background: props.mode==='light'?'white':'#042743', color: props.mode==='light'?'black':'white' }}>\r\n            <div className=\"accordion-body\" >\r\n                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate class that we use to style each element. These class control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\"  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={{background: props.mode==='light'?'white':'#437197', color: props.mode==='light'?'black':'white' }}>\r\n                Tab 2\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\" style={{background: props.mode==='light'?'white':'#042743', color: props.mode==='light'?'black':'white' }}>\r\n            <div className=\"accordion-body\" >\r\n                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate class that we use to style each element. These class control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\"  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={{background: props.mode==='light'?'white':'#437197', color: props.mode==='light'?'black':'white' }}>\r\n                Tab 3\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\" style={{background: props.mode==='light'?'white':'#042743', color: props.mode==='light'?'black':'white' }}>\r\n            <div className=\"accordion-body\" >\r\n                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate class that we use to style each element. These class control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\"  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\" style={{background: props.mode==='light'?'white':'#437197', color: props.mode==='light'?'black':'white' }}>\r\n                Tab 4\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseFour\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\" style={{background: props.mode==='light'?'white':'#042743', color: props.mode==='light'?'black':'white' }}>\r\n            <div className=\"accordion-body\" >\r\n                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate class that we use to style each element. These class control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}","import './App.css';\nimport React,{useState} from 'react';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\nimport { Switch } from 'react-router-dom/cjs/react-router-dom.min';\n\n\nfunction App() {\n  const[mode,setMode] = useState('light'); //Wheater dark mode is enabled or not\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n      setAlert({\n        message: message,\n         type: type\n      })\n      setTimeout(() =>{\n        setAlert(null)\n      },1500);\n  }\n  \n  // const changegreen = ()=>{\n  //   document.body.style.backgroundColor = '#35C649'\n  // }\n  // const changeyellow = ()=>{\n  //   document.body.style.backgroundColor = '#CAB911'\n  // }\n  // const changered = ()=>{\n  //   document.body.style.backgroundColor = '#C15031'\n  // }\n\n  const removeBodyClasses = () => {\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-primary')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-success')\n  }\n\n  const toggleMode = (cls)=>{\n    removeBodyClasses();\n    console.log(cls)\n    document.body.classList.add('bg-'+cls)\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.background = '#042743';\n      showAlert(\"Dark mode has been Active\", \"success\");\n      document.title='Text utils - Dark Mode';\n      setInterval(() =>{\n        document.title='Text utils is amazing';\n      },2000);\n      setInterval(() =>{\n        document.title='Text utils is install now';\n      },1500);\n    }else{\n      setMode('light');\n      document.body.style.background = 'white';\n      showAlert(\"Light mode has been Active\", \"success\");\n      document.title='Text utils - Light Mode';\n      setInterval(() =>{\n        document.title='Text utils is amazing';\n      },2000);\n      setInterval(() =>{\n        document.title='Text utils is install now';\n      },1500);\n    }\n    \n  }\n\n  return (\n    <>\n        {/* <Navbar title=\"New Webite\" aboutText=\"About us\" mode={mode}/> \n        <Navbar title=\"New Webite\" mode={mode} toggleMode={toggleMode}  reacchangegreen={changegreen} changered={changered} changeyellow={changeyellow} /> */}\n        <Router>\n        <Navbar title=\"New Webite\" mode={mode} toggleMode={toggleMode}/>\n        <Alert  alert={alert}/>\n        <div className=\"container my-3\"> \n            <Switch>\n                <Route exact path=\"/\">\n                    <TextForm showAlert={showAlert} heading=\"Textutils - word Counter,Character Counter,remove extra space\" mode={mode}/> \n                </Route>\n                <Route exact path=\"/about\">\n                    <About mode={mode}/> \n                </Route>\n            </Switch>\n        \n        </div>\n         </Router> \n     </>\n  ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}