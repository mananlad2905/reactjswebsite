{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","style","background","color","heading","onChange","event","console","log","target","value","rows","newText","toUpperCase","showAlert","toLowerCase","slice","document","getElementById","select","navigator","clipboard","writeText","split","join","length","trim","match","replace","defaultProps","Alert","alert","word","lower","charAt","capitalize","message","App","setMode","_useState3","_useState4","setAlert","setTimeout","body","setInterval","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.a72b0d9f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n           <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                             <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                              <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n                        </li> \r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode}  role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckDefault\"></label>\r\n                    </div>\r\n                    {/* <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-light\" type=\"submit\">Search</button>\r\n                    </form> \r\n                    \r\n                    <div className=\"dropdown mx-4\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        Colored Background\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\">\r\n                        <li><a className=\"dropdown-item\" onClick={props.changegreen} href=\"#\">Green</a></li>\r\n                        <li><a className=\"dropdown-item\" onClick={props.changered} href=\"#\">Red</a></li>\r\n                        <li><a className=\"dropdown-item\" onClick={props.changeyellow} href=\"#\">Yellow</a></li>\r\n                    </ul>\r\n                    </div> */}\r\n\r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n           </nav>\r\n    \r\n        </>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n                    title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired\r\n                }\r\nNavbar.defaultProps = {\r\n    title: 'New Website',\r\n    aboutText: 'About us'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    // const [mytextStyle,setMyStyle] = useState({\r\n    //     width: '230px',\r\n    //     height: '70px'\r\n    // })\r\n    \r\n    const handleupClick = () =>{\r\n        console.log(\"Uppercase is Clicked\"  + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted into Uppercase\", \"warning\" );\r\n    }\r\n    const handleloClick = () =>{\r\n        console.log(\"Lowercase is Clicked\"  + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted into Lowercase\", \"warning\" );\r\n    }\r\n    const handlecapClick = () =>{\r\n        console.log(\"Captization is Clicked\"  + text);\r\n        let newText = text[0].toUpperCase() + text.slice(1).toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted into First letter Captial\", \"warning\" );\r\n    }\r\n    const handleclearClick = () =>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Clear Text\", \"danger\" );\r\n    }\r\n    const handleonchange = (event) =>{\r\n        console.log(\"on changed\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () => {\r\n        // console.log(\"I am copy\");\r\n        var text = document.getElementById(\"mybox2\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy Text\", \"primary\" );\r\n    }\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra space remove From sentance\", \"primary\" );\r\n    }\r\n\r\n    const [text, setText] = useState('Enter text here');\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h3 className='text-center text-uppercase' style={{background: props.mode==='light'?'white':'#042743', color: props.mode==='light'?'black':'white' }} >{props.heading}</h3>\r\n               <div className=\"mb-3\">\r\n                  <textarea className=\"form-control\" onChange={handleonchange} style={{background: props.mode==='light'?'white':'#042743', color: props.mode==='light'?'black':'white' }} value={text} id=\"mybox2\" rows=\"8\"></textarea>\r\n               </div>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}  onClick={handleupClick}>Convert into Uppercase</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}   onClick={handleloClick}>Convert into Lowercase</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}   onClick={handlecapClick}>Convert into Capitalization</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}   onClick={handleCopy}>Copy text</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}   onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'blue':'white', color: props.mode==='light'?'white':'black' }}   onClick={handleclearClick}>Clear Text</button>\r\n\r\n            {/* <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Convert text in Bold</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Convert text in underline</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Convert text in Italic</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Change Alternating Case</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Enable Light Mode</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Change the First letter to Uppercase of word</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Reverse the text</button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Change Font size in Increment </button>\r\n            <button className=\"btn mx-2 my-2\" style={{background: props.mode==='light'?'black':'white', color: props.mode==='light'?'white':'black' }} >Change Font size in Decrement </button> */}\r\n\r\n        </div>\r\n        <div className=\"container my-5\">\r\n            <h4 style={{background: props.mode==='light'?'white':'#042743', color: props.mode==='light'?'black':'white' }} >Your text Summary</h4>\r\n            <p style={{background: props.mode==='light'?'white':'#042743', color: props.mode==='light'?'black':'white' }} >{text.split(\" \").length} Words and {text.length} Characters</p>\r\n            <p style={{background: props.mode==='light'?'white':'#042743', color: props.mode==='light'?'black':'white' }} >{0.008 * text.split(\" \").length} Minutes</p>\r\n            <h4 style={{background: props.mode==='light'?'white':'#042743', color: props.mode==='light'?'black':'white' }} >Preview</h4>\r\n            <p style={{background: props.mode==='light'?'white':'#042743', color: props.mode==='light'?'black':'white' }} >{text.length>0?text:\"Enter Something to preview it here\"}</p>\r\n            <p>{text.trim() === '' ? 0 : text.match(/\\S+/g).length} words and {text.replace(/\\s+/g, '').length} characters</p>\r\n        </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\nfunction Alert(props){\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return(\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport React,{useState} from 'react';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Route\n// } from \"react-router-dom\";\n// import { Switch } from 'react-router-dom/cjs/react-router-dom.min';\n\n\nfunction App() {\n  const[mode,setMode] = useState('light'); //Wheater dark mode is enabled or not\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n      setAlert({\n        message: message,\n         type: type\n      })\n      setTimeout(() =>{\n        setAlert(null)\n      },1500);\n  }\n  \n  // const changegreen = ()=>{\n  //   document.body.style.backgroundColor = '#35C649'\n  // }\n  // const changeyellow = ()=>{\n  //   document.body.style.backgroundColor = '#CAB911'\n  // }\n  // const changered = ()=>{\n  //   document.body.style.backgroundColor = '#C15031'\n  // }\n\n\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.background = '#042743';\n      showAlert(\"Dark mode has been Active\", \"success\");\n      document.title='Text utils - Dark Mode';\n      setInterval(() =>{\n        document.title='Text utils is amazing';\n      },2000);\n      setInterval(() =>{\n        document.title='Text utils is install now';\n      },1500);\n    }else{\n      setMode('light');\n      document.body.style.background = 'white';\n      showAlert(\"Light mode has been Active\", \"success\");\n      document.title='Text utils - Light Mode';\n      setInterval(() =>{\n        document.title='Text utils is amazing';\n      },2000);\n      setInterval(() =>{\n        document.title='Text utils is install now';\n      },1500);\n    }\n    \n  }\n\n  return (\n    <>\n        {/* <Navbar title=\"New Webite\" aboutText=\"About us\" mode={mode}/> \n        <Navbar title=\"New Webite\" mode={mode} toggleMode={toggleMode}  reacchangegreen={changegreen} changered={changered} changeyellow={changeyellow} /> */}\n        {/* <Router> */}\n        <Navbar title=\"New Webite\" mode={mode} toggleMode={toggleMode}/>\n        <Alert  alert={alert}/>\n        <div className=\"container my-3\"> \n            \n            {/* <Switch>\n              <Route exact path=\"/about\"> */}\n                  {/* <About mode={mode}/>   */}\n              {/* </Route>\n              <Route exact path=\"/\"> */}\n                  <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/> \n              {/* </Route>\n            </Switch> */}\n        \n        </div>\n        {/* </Router> */}\n     </>\n  ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}